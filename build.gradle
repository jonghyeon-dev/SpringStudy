plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18' // 3.0.6
	id 'io.spring.dependency-management' version '1.0.15.RELEASE' // 1.1.0
}

group = 'com.sarang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11' // 17
apply plugin: 'war'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
	implementation group: 'javax.servlet', name: 'jstl', version: '1.2' //스프링부트 2.X
	implementation 'com.google.code.findbugs:jsr305:3.0.2' // null 포인터 예외와 같은 오류를 사전에 방지
	// implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.X 이상
	// implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.X 이상
	// implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.X 이상
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
	implementation 'org.json:json:20231013'
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	implementation 'commons-fileupload:commons-fileupload:1.5'
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'// spring boot oauth2
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	// annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    exclude '**/*'
}