# Server Setting
server:
    port: 8080
    tomcat:
        max-http-form-post-size: 30MB # Form Post Size

#Spring Setting
spring:
    profiles:
        active: ${server.Active} # jvm arguments 사용, 환경 별 설정파일 세팅용
    #DataBase Setting
    # datasource:
    #     driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy # [Logging용] 일반 DB driver, Mysql 운용 시 변경 => com.mysql.cj.jdbc.Driver 
    #     url: jdbc:log4jdbc:mysql://ip:port/dbName(Schema)?characterEncoding=UTF-8&serverTimezone=Asia/Seoul # [Logging용] 일반 DB url 운용 시 :log4jdbc 삭제
    #     username: id
    #     password: pw
    #JSP Setting
    mvc:
        view:
            prefix: /WEB-INF/jsp/
            suffix: .jsp
        # put,delete method 사용을 위한 설정
        hiddenmethod:
            filter:
                enabled: true
    #jpa Setting
    jpa:
        show-sql: true          # JPA SQL문을 콘솔로 출력
        # hibernate:            #hibernate가 데이터베이스 스키마 자동생성 설정
        #     ddl-auto: update  # 엔티티 클래스와 일치하도록 데이터베이스 스키마를 자동으로 업데이트. 새 테이블, 열 및 제약 조건을 추가하지만 기존 스키마에서 아무것도 제거하지 않음.
        properties:
           hibernate:
                # "[show_sql]": true          # 하이버네이트가 실행한 모든 SQL문을 콘솔로 출력
                "[format_sql]": true        # SQL문을 가독성 있게 표현
                # "[use_sql_comments]": true  # 디버깅 정보 출력
    #thymeleaf
    thymeleaf:
        cache: false
        prefix: classpath:templates/
        suffix: .html
        #view-names는 jsp와 같이 사용할 경우 구분 짓기 위하여 사용 thymeleaf로 시작하는 경우는 thymeleaf로 처리
        view-names: thymeleaf/*
    #devtools 설정
    # devtools:
    #     restart:
    #         enabled: true
    #     livereload: 
    #         enabled: true
    servlet:
        multipart:
            maxFileSize: 15MB # 파일 하나의 최대 크기
            maxRequestSize: 30MB  # 한 번에 최대 업로드 가능 용량
            # location: 파일저장경로 (C:\~~~ or /~~~)
            

    
#Mybatis Setting
mybatis: 
    type-aliases-package: com.sarang.model # 매핑할 모델의 패키지 기본경로
    mapper-locations: classpath:/mapper/**/*.xml # mapper.xml 위치 명시
    configuration:
        map-underscore-to-camel-case: true # 카멜 케이스 VO 매핑
        call-setters-on-nulls: true # 쿼리 결과 필드가 null인 경우, 누락이 되서 나오지 않게 설정
        jdbc-type-for-null: null # 쿼리에 보내는 파라미터가 null인 경우, 오류가 발생하는 것 방지

#Log 관련 설정
# off   - 사용하지 않음
# info  - 정보성 로그
# warn  - 경고성 로그
# error - 에러 로그
# fatal - 심각한 문제 로그
logging:
    level:
        jdbc: 
            sqlonly: off # SQL문을 보여준다.
            sqltiming: off # SQL문과 이 SQL문을 수행하는 시간(ms)을 같이 보여준다
            resultsettable: off # SQL의 결과로 조회된 데이터를 table 형태로 로그를 보여준다.
            audit: off # ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 보여준다. 상당히 많은 양의 로그가 나오기 때문에 권장하지 않음.
            resultset: off # ResultSet 을 포함한 모든 JDBC 호출 정보를 로그로 보여준다. audit 처럼 많은 로그가 나오기 때문에 권장하지 않음.
            connection: off # DB 연결, 연결 해제와 관련된 로그를 보여준다